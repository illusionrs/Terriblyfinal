{"ast":null,"code":"var _jsxFileName = \"/home/rajeev/Desktop/Terribly/frontend/src/components/Search.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport './Search.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.call = () => {\n      var b = [];\n      var self = this;\n      axios.get(\"http://localhost:5000/data\").then(response => {\n        // handle success\n        var a = JSON.stringify(response);\n        a.toLowerCase();\n        console.log(a);\n        var separators = [\" \", \"\\\\\\\\n\", \"\\\\.\", '\\\\\\\\', '\\\\\\/', '\\\\\\'', \",\", '\\\\-', '\\\\_', \"\\\\*\", '\\\\\\(', '\\\\\\)', \"/\", \"[\", \"]\", \":\", '\\\\\"', \"}\", \"{\", \"@\", \"\\\\?\", \"\\\\;\", '[0-9]', '>', '<'];\n        console.log(separators.join(\"|\"));\n        b = a.split(new RegExp(separators.join(\"|\"), \"g\")); //After spliting value\n\n        console.log(b);\n        var ob = new Object(); //making hashmap objec of words frequency\n\n        for (var i = 0; i < b.length; i++) {\n          if (!(b[i] in ob && b[i] !== \"\")) {\n            ob[b[i]] = 1;\n          } else {\n            ob[b[i]] = ob[b[i]] + 1;\n          }\n        }\n\n        console.log(ob); //sorting according to their frequency\n\n        var final = Object.entries(ob).sort((a, b) => b[1] - a[1]);\n        console.log(\"my final result:\", final);\n        var result = [];\n\n        for (var i = 0; i < this.state.value; i++) {\n          result[i] = final[i];\n        }\n\n        self.setState({\n          dt: result\n        });\n        console.log(self.state.dt);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    };\n\n    this.inputHandler = e => {\n      this.setState({\n        value: e.target.value\n      });\n      console.log(this.state.value);\n    };\n\n    this.state = {\n      dt: [],\n      value: 0\n    };\n  }\n\n  render() {\n    // const classes = this.useStyles\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"searchbar\",\n      type: \"text\",\n      placeholder: \"Enter the number..... \",\n      onChange: this.inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"bts\",\n      onClick: () => this.call(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \"submit\"))), /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"tb\",\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Words\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, \"Frequency\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, this.state.dt.map(row => /*#__PURE__*/React.createElement(TableRow, {\n      key: row[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, row[0]), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, row[1])))))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/rajeev/Desktop/Terribly/frontend/src/components/Search.js"],"names":["React","axios","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Search","Component","constructor","call","b","self","get","then","response","a","JSON","stringify","toLowerCase","console","log","separators","join","split","RegExp","ob","Object","i","length","final","entries","sort","result","state","value","setState","dt","catch","error","finally","inputHandler","e","target","render","map","row"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAKA,MAAMC,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAoC;AAMhCC,EAAAA,WAAW,GAAG;AACV;;AADU,SASZC,IATY,GASL,MAAM;AACX,UAAIC,CAAC,GAAG,EAAR;AACA,UAAIC,IAAI,GAAG,IAAX;AACAd,MAAAA,KAAK,CACFe,GADH,CACO,4BADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB;AACA,YAAIC,CAAC,GAAGC,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAR;AACAC,QAAAA,CAAC,CAACG,WAAF;AACCC,QAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AAED,YAAIM,UAAU,GAAG,CACf,GADe,EAEf,OAFe,EAGf,KAHe,EAIf,MAJe,EAKf,MALe,EAMf,MANe,EAOf,GAPe,EAQhB,KARgB,EAShB,KATgB,EAWf,KAXe,EAYf,MAZe,EAaf,MAbe,EAcf,GAde,EAef,GAfe,EAgBf,GAhBe,EAiBf,GAjBe,EAkBf,KAlBe,EAmBf,GAnBe,EAoBf,GApBe,EAqBf,GArBe,EAsBf,KAtBe,EAuBf,KAvBe,EAwBf,OAxBe,EAyBf,GAzBe,EA0Bf,GA1Be,CAAjB;AA4BAF,QAAAA,OAAO,CAACC,GAAR,CAAYC,UAAU,CAACC,IAAX,CAAgB,GAAhB,CAAZ;AACCZ,QAAAA,CAAC,GAAGK,CAAC,CAACQ,KAAF,CAAQ,IAAIC,MAAJ,CAAWH,UAAU,CAACC,IAAX,CAAgB,GAAhB,CAAX,EAAiC,GAAjC,CAAR,CAAJ,CAnCiB,CAoCjB;;AACDH,QAAAA,OAAO,CAACC,GAAR,CAAYV,CAAZ;AAGA,YAAIe,EAAE,GAAE,IAAIC,MAAJ,EAAR,CAxCkB,CAyClB;;AACA,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACjB,CAAC,CAACkB,MAAhB,EAAuBD,CAAC,EAAxB,EAA2B;AAEzB,cAAG,EAAEjB,CAAC,CAACiB,CAAD,CAAD,IAAQF,EAAR,IAAcf,CAAC,CAACiB,CAAD,CAAD,KAAO,EAAvB,CAAH,EAA8B;AAC5BF,YAAAA,EAAE,CAACf,CAAC,CAACiB,CAAD,CAAF,CAAF,GAAS,CAAT;AACD,WAFD,MAGI;AACFF,YAAAA,EAAE,CAACf,CAAC,CAACiB,CAAD,CAAF,CAAF,GAASF,EAAE,CAACf,CAAC,CAACiB,CAAD,CAAF,CAAF,GAAS,CAAlB;AACD;AAEF;;AAEDR,QAAAA,OAAO,CAACC,GAAR,CAAYK,EAAZ,EArDkB,CAsDpB;;AAEC,YAAII,KAAK,GAAEH,MAAM,CAACI,OAAP,CAAeL,EAAf,EAAmBM,IAAnB,CAAwB,CAAChB,CAAD,EAAGL,CAAH,KAASA,CAAC,CAAC,CAAD,CAAD,GAAKK,CAAC,CAAC,CAAD,CAAvC,CAAX;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BS,KAA/B;AACD,YAAIG,MAAM,GAAC,EAAX;;AACC,aAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKM,KAAL,CAAWC,KAAzB,EAA+BP,CAAC,EAAhC,EAAmC;AACjCK,UAAAA,MAAM,CAACL,CAAD,CAAN,GAAUE,KAAK,CAACF,CAAD,CAAf;AACD;;AAEDhB,QAAAA,IAAI,CAACwB,QAAL,CAAc;AACZC,UAAAA,EAAE,EAACJ;AADS,SAAd;AAGAb,QAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACsB,KAAL,CAAWG,EAAvB;AAIA,OAxEH,EAyEGC,KAzEH,CAyES,UAAUC,KAAV,EAAiB;AACtB;AACAnB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACD,OA5EH,EA6EGC,OA7EH,CA6EW,YAAY,CACnB;AACD,OA/EH;AAgFD,KA5FW;;AAAA,SA8FZC,YA9FY,GA8FEC,CAAD,IAAK;AAEd,WAAKN,QAAL,CAAc;AACZD,QAAAA,KAAK,EAACO,CAAC,CAACC,MAAF,CAASR;AADH,OAAd;AAKAf,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKa,KAAL,CAAWC,KAAvB;AACH,KAtGW;;AAGV,SAAKD,KAAL,GAAa;AACXG,MAAAA,EAAE,EAAE,EADO;AAEXF,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAiGHS,EAAAA,MAAM,GAAE;AACJ;AAEA,wBAEI;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAA0C,MAAA,WAAW,EAAC,wBAAtD;AAA+E,MAAA,QAAQ,EAAE,KAAKH,YAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAGA;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAE,MAAM,KAAK/B,IAAL,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,CAFA,CADJ,eAaN,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAEJ,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,IAAjB;AAAsB,oBAAW,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF,CADF,eAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK4B,KAAL,CAAWG,EAAX,CAAcQ,GAAd,CAAmBC,GAAD,iBACjB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAG,CAAC,CAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,IAArB;AAA0B,MAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,GAAG,CAAC,CAAD,CADN,CADF,eAIE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BA,GAAG,CAAC,CAAD,CAA7B,CAJF,CADD,CADH,CARF,CADA,CAbM,CAFJ;AA0CH;;AA3J+B;;AA+JpC,eAAevC,MAAf","sourcesContent":["import React from 'react'\nimport axios from \"axios\";\nimport './Search.css'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n\n\nclass Search extends React.Component{\n  \n\n\n\n\n    constructor() {\n        super();\n    \n        this.state = {\n          dt: [],\n          value: 0\n        };\n      }\n    \n      call = () => {\n        var b = [];\n        var self = this;\n        axios\n          .get(\"http://localhost:5000/data\")\n          .then((response) => {\n            // handle success\n            var a = JSON.stringify(response);\n            a.toLowerCase()\n             console.log(a)\n           \n            var separators = [\n              \" \",\n              \"\\\\\\\\n\",\n              \"\\\\.\",\n              '\\\\\\\\',\n              '\\\\\\/',\n              '\\\\\\'',\n              \",\",\n             '\\\\-',\n             '\\\\_',\n    \n              \"\\\\*\",\n              '\\\\\\(', \n              '\\\\\\)',\n              \"/\",\n              \"[\",\n              \"]\",\n              \":\",\n              '\\\\\"',\n              \"}\",\n              \"{\",\n              \"@\",\n              \"\\\\?\",\n              \"\\\\;\",\n              '[0-9]',\n              '>',\n              '<'\n            ];\n            console.log(separators.join(\"|\"));\n             b = a.split(new RegExp(separators.join(\"|\"), \"g\"));\n             //After spliting value\n            console.log(b);\n            \n            \n            var ob= new Object()\n            //making hashmap objec of words frequency\n            for(var i=0;i<b.length;i++){\n    \n              if(!(b[i] in ob && b[i]!==\"\")){\n                ob[b[i]]=1\n              }\n              else{\n                ob[b[i]]=ob[b[i]]+1\n              }\n              \n            }\n    \n            console.log(ob)\n          //sorting according to their frequency\n\n           var final= Object.entries(ob).sort((a,b) => b[1]-a[1])\n           console.log(\"my final result:\",final);\n          var result=[]\n           for(var i=0;i<this.state.value;i++){\n             result[i]=final[i]\n           }\n\n           self.setState({\n             dt:result\n           })\n           console.log(self.state.dt)\n\n          \n\n          })\n          .catch(function (error) {\n            // handle error\n            console.log(error);\n          })\n          .finally(function () {\n            // always executed\n          });\n      };\n\n      inputHandler=(e)=>{\n\n          this.setState({\n            value:e.target.value\n          })\n\n\n          console.log(this.state.value)\n      }\n    \n    render(){\n        // const classes = this.useStyles\n\n        return (\n\n            <div className=\"bd\">\n                <center>\n\n                <div>\n                <input className=\"searchbar\" type=\"text\"  placeholder=\"Enter the number..... \" onChange={this.inputHandler} />\n\n                <button className=\"bts\" onClick={() => this.call()}>submit</button>\n                </div>\n                \n\n                </center>\n              \n                 \n      <TableContainer component={Paper}>\n      <Table className=\"tb\" aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Words</TableCell>\n            <TableCell align=\"right\">Frequency</TableCell>\n           \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {this.state.dt.map((row) => (\n            <TableRow key={row[0]}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row[0]}\n              </TableCell>\n              <TableCell align=\"right\">{row[1]}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n\n\n               \n            </div>\n        )\n    }\n}\n\n\nexport default Search"]},"metadata":{},"sourceType":"module"}